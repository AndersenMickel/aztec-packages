# This devbox container can be used to provide a full development environment.
# The user should use the ./run.sh script to launch.
# The users ~/.devbox directory will be mounted into /home/aztec-dev.
# It provides docker via the hosts docker instance, mounted at /var/lib/docker.sock.
# It uses an entrypoint script at runtime to perform uid/gid alignment with the host and drop into user account.
FROM aztecprotocol/basebox

# Install docker client. Will use mounted host docker socket.
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --yes --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
RUN echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
    $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update && apt-get install -y docker-ce-cli
ADD https://raw.githubusercontent.com/docker/docker-ce/master/components/cli/contrib/completion/bash/docker /etc/bash_completion.d/docker.sh

# sudo group can sudo without password.
RUN echo '%sudo ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers

# As we're going to drop down to a less privileged user with same uid as the host, we need an entrypoint script.
RUN apt install -y gosu
COPY entrypoint.sh .
ENTRYPOINT ["/entrypoint.sh"]

# Ensure terminal has color.
ENV TERM=xterm-256color
# Trick lean prompt into showing hostname.
ENV SSH_CONNECTION=' '

# Create the user we'll run as.
# It's expected that a host directory will be mounted onto the home dir.
# We populate with a basic configuration in case a mount doesn't occur (e.g. a github codespace).
# We align the user and group id at runtime in the entrypoint script.
# The user is part of the root group, allowing writes to certain dirs (e.g. /opt/rust).
RUN useradd --shell /bin/zsh -G sudo,root -m aztec-dev
WORKDIR /home/aztec-dev
COPY --chown=aztec-dev:aztec-dev home .
CMD ["/bin/zsh"]