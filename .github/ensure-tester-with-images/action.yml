# Reusable setup workflow for CI tasks
name: Setup Workflow
description: "Reusable setup steps"

inputs:
  runner_type:
    required: true
  builder_type:
    required: true
  builder_images_to_copy:
    required: true
  builder_command:
    required: true
runs:
  # define an action, runs in OS of caller
  using: composite
  steps:
    - name: Ensure Builder And Images
      uses: ./.github/ensure-builder
      if: ${{ inputs.builder_images_to_copy }}
      with:
        runner_type: ${{ inputs.builder_type }}
        run: |
          # in case we built this before, there might have been an inconvenient docker prune, still include builder_command and redo
          set -eux
          for image in ${{ inputs.builder_images_to_copy }} ; do
            if ! docker image ls --format '{{.Repository}}:{{.Tag}}' | grep "$image" ; then
              export FORCE_COLOR=1
              git submodule update --init --recursive --recommend-shallow
              ${{ inputs.builder_command }}
              break
            fi
          done

    - name: Compute Success Key
      shell: bash
      run: |
        scripts/run_on_builder "
          for image in ${{ inputs.builder_images_to_copy }} ; do
            docker images --no-trunc --quiet $image
          done" > .success_key
        echo "${{ inputs.run }}" >> .success_key
        echo "SUCCESS_KEY=$(cat .success_key | md5sum)" >> $GITHUB_ENV

    - name: Check Cached Success
      uses: ./.github/cache-success
      with:
        success_key: ${{ env.SUCCESS_KEY }}

    - name: Copy Docker Images To Tester
      uses: ./.github/ensure-tester
      if: ${{ env.CACHE_SUCCESS != 'true' }}
      with:
        runner_type: ${{ inputs.runner_type}}
        run: |
          set -eux
          export BUILDER_SPOT_IP=${{ env.BUILDER_SPOT_IP }}
          export BUILDER_SPOT_KEY=~/.ssh/build_instance_key
          SHA=${{ github.event.pull_request.head.sha }}
          scripts/run_on_builder "
            flock $SHA.lock bash -c '! [ -f $SHA.brotli ] && docker save aztecprotocol/aztec:$SHA aztecprotocol/end-to-end:$SHA | brotli -2 > $SHA.brotli'
            cat $SHA.brotli
          " | brotli --decompress | docker loa