name: Run CI with Earthly
on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

jobs:
  # ci:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       environment: [x86, arm]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #       with:
  #         ref: ${{ github.event.pull_request.head.sha }}
  #         submodules: recursive

  #     - name: Setup
  #       run: |
  #         mkdir -p ~/.ssh
  #         echo DOCKER_HOST=ssh://build-instance-${{ matrix.environment }}.aztecprotocol.com >> $GITHUB_ENV
  #         echo ${{ secrets.DOCKERHUB_PASSWORD}} | docker login -u aztecprotocolci --password-stdin
  #         echo ${{ secrets.BUILD_INSTANCE_SSH_KEY }} | base64 -d > ~/.ssh/build_instance_key
  #         chmod 600 ~/.ssh/build_instance_key
  #         cat > ~/.ssh/config <<EOF
  #         IdentityFile ~/.ssh/build_instance_key
  #         StrictHostKeyChecking no
  #         User ubuntu
  #         EOF

  #     # Turn on if updating our custom built WASM-enabled clang (wasi-sdk), foundry or other base images
  #     #- name: Ensure Base Images
  #     #  run: |
  #         # scripts/earthly --push ./foundry/+build
  #         # Uncomment the following line if needed for the arm environment
  #         # scripts/earthly --push ./barretenberg/cpp/+build-wasi-sdk

  #     - name: CI
  #       run: scripts/earthly --exec-stats +build-ci-small
  bench:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          submodules: recursive

      - name: Setup
        run: |
          mkdir -p ~/.ssh
          echo ${{ secrets.DOCKERHUB_PASSWORD}} | docker login -u aztecprotocolci --password-stdin
          echo ${{ secrets.BUILD_INSTANCE_SSH_KEY }} | base64 -d > ~/.ssh/build_instance_key
          chmod 600 ~/.ssh/build_instance_key
          cat > ~/.ssh/config <<EOF
          IdentityFile ~/.ssh/build_instance_key
          StrictHostKeyChecking no
          User ubuntu
          EOF

      - name: Bench
        run: |
          set -euxo pipefail
          scripts/earthly ./barretenberg/cpp/+bench-ultra-honk | tee output.txt
          # Save output in environment for next steps
          echo "benchmark_output<<EOF" >> $GITHUB_ENV
          cat output.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
 
      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: bench-ultra-honk

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            bench-ultra-honk
            ${{ env.benchmark_output }}
          edit-mode: replace