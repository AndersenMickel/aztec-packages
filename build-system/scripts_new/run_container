#!/usr/bin/env bash
[ -n "${BUILD_SYSTEM_DEBUG:-}" ] && set -x # conditionally trace
set -euo pipefail

REPOSITORY=$1
shift

# trap 'echo "Killing jobs..." && kill -SIGINT $(jobs -p)' SIGINT

IMAGE_URI=$(calculate_image_uri $REPOSITORY)
BASE_TAG=$(calculate_image_tag $REPOSITORY)
SUCCESS_TAG=$BASE_TAG-$JOB_NAME

echo "Success tag: $SUCCESS_TAG"

if check_rebuild $SUCCESS_TAG $REPOSITORY; then
  echo "No re-run necessary for $IMAGE_URI."
  exit 0
fi

function run {
  docker run --rm -t $IMAGE_URI $@
  docker tag $IMAGE_URI $ECR_URL/$REPOSITORY:$SUCCESS_TAG
}

X86=$(query_manifest x86 $REPOSITORY)
ARM=$(query_manifest arm $REPOSITORY)

if [ "$X86" == "true" ]; then
  DOCKER_HOST=$DOCKER_HOST_X86 run $@ > >(awk -v c="$GREEN" -v r="$RESET" '$0=c"x86_64: "r $0') 2>&1 &
fi
if [ "$ARM" == "true" ]; then
  DOCKER_HOST=$DOCKER_HOST_ARM run $@ > >(awk -v c="$BLUE" -v r="$RESET" '$0=c"arm64: "r $0') 2>&1 &
fi

for job in $(jobs -p); do
  wait $job || exit 1
done