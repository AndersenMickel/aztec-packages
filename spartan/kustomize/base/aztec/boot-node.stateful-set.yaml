apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: boot-node
spec:
  serviceName: "boot-node"
  replicas: 1
  selector:
    matchLabels:
      app: boot-node
  template:
    metadata:
      labels:
        app: boot-node
    spec:
      initContainers:
        - name: wait-for-ethereum
          image: curlimages/curl:7.81.0
          command:
            - /bin/sh
            - -c
            - |
              until curl -s -X POST -H 'Content-Type: application/json' \
                -d '{"jsonrpc":"2.0","method":"web3_clientVersion","params":[],"id":67}' \
                http://ethereum.spartan:8545 | grep -q anvil; do
                echo "Waiting for Ethereum node..."
                sleep 5
              done
              echo "Ethereum node is ready!"
        - name: deploy-contracts
          image: aztecprotocol/aztec:803fd7e08dc236027fc5cd12996c88ee679a30a9
          command:
            [
              "/bin/sh",
              "-c",
              "cp /scripts/deploy-contracts.sh /tmp/deploy-contracts.sh && chmod +x /tmp/deploy-contracts.sh && /tmp/deploy-contracts.sh",
            ]
          volumeMounts:
            - name: shared-volume
              mountPath: /shared
            - name: scripts
              mountPath: /scripts
          env:
            - name: ETHEREUM_HOST
              value: "http://ethereum.spartan:8545"
      containers:
        - name: aztec
          image: aztecprotocol/aztec:803fd7e08dc236027fc5cd12996c88ee679a30a9
          command:
            [
              "/bin/bash",
              "-c",
              "source /shared/contracts.env && env && node --no-warnings /usr/src/yarn-project/aztec/dest/bin/index.js start --node p2pEnabled=true --archiver --sequencer --prover --pxe",
            ]
          volumeMounts:
            - name: shared-volume
              mountPath: /shared
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_DNS_NAME
              value: "$(POD_NAME).boot-node.$(POD_NAMESPACE).svc.cluster.local"
            - name: PORT
              value: "8080"
            - name: LOG_LEVEL
              value: "debug"
            # - name: DEBUG
            #   value: "discv5:*,aztec:discv5_service:*,aztec:libp2p_service:*"
            - name: ETHEREUM_HOST
              value: "http://ethereum.spartan:8545"
            - name: P2P_ENABLED
              value: "true"
            - name: P2P_TCP_ANNOUNCE_ADDR
              value: "$(POD_DNS_NAME):40400"
            - name: P2P_UDP_ANNOUNCE_ADDR
              value: "$(POD_DNS_NAME):40400"
            - name: P2P_TCP_LISTEN_ADDR
              value: 0.0.0.0:40400
            - name: P2P_UDP_LISTEN_ADDR
              value: 0.0.0.0:40400
            - name: PEER_ID_PRIVATE_KEY
              value: 0802122002f651fd8653925529e3baccb8489b3af4d7d9db440cbf5df4a63ff04ea69683
          ports:
            - containerPort: 8080
            - containerPort: 40400
      volumes:
        - name: shared-volume
          emptyDir: {}
        - name: scripts
          configMap:
            name: deploy-contracts-script
