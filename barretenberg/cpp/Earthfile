VERSION 0.8
FROM ubuntu:lunar

RUN apt-get update && apt-get install -y \
  build-essential \
  curl \
  git \
  cmake \
  lsb-release \
  wget \
  software-properties-common \
  gnupg \
  ninja-build \
  npm \
  libssl-dev \
  jq \
  bash \
  libstdc++6 \
  clang-format

RUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && ./llvm.sh 16
# let's not just spew files on /
WORKDIR /build
# WASM compiler, only redownload if this script changes
COPY ./scripts/install-wasi-sdk.sh ./scripts/install-wasi-sdk.sh
RUN ./scripts/install-wasi-sdk.sh

source:
    # minimum files to trigger rebuild
    # keep timestamps for incremental builds
    COPY --keep-ts src/barretenberg src/barretenberg
    COPY --keep-ts src/CMakeLists.txt src/CMakeLists.txt
    COPY --keep-ts CMakeLists.txt CMakeLists.txt
    COPY --keep-ts cmake cmake
    COPY CMakePresets.json CMakePresets.json

build:
    FROM +source
    ARG preset
    ARG cmake_flags
    # Use a mount for incremental builds.
    RUN --mount type=cache,id=$preset-build,target=/build/build \
        cmake --preset $preset && \
        cmake --build --preset $preset $cmake_flags && \
        cp -r build/bin .
    # reconstruct build folder, as it was used in cache
    RUN mkdir build && mv bin build
    SAVE ARTIFACT build

release-build:
    FROM +build --preset=clang16 --cmake_flags="--target ultra_honk_rounds_bench --target bb"

wasm-build:
    FROM +build --preset=wasm-threads --cmake_flags="--target ultra_honk_rounds_bench --target bb"
    RUN ./scripts/strip-wasm.sh
    SAVE ARTIFACT build

gcc-build:
    FROM +build --preset=gcc --cmake_flags=""

fuzzing-build:
    FROM +build --preset=fuzzing --cmake_flags=""

clang-assert-build:
    FROM +build --preset=clang16 --cmake_flags="-DCMAKE_BUILD_TYPE=RelWithAssert"

clang-format-check:
    FROM +source
    COPY .clang-format .
    COPY format.sh .
    RUN ./format.sh check
    SAVE ARTIFACT build/bin

bench:
    FROM +release-build
    IMPORT ./srs_db AS srs_db
    COPY srs_db:+download/build srs_db
    RUN cd build && ./bin/ultra_honk_rounds_bench
